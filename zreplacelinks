#!/usr/bin/env ruby
# Replace wiki links from before to after in files read from STDIN

require 'clamp'

ZETTEL_DIR = File.expand_path("~/Dropbox/Doc/zettel/main")

Clamp do
  parameter "BEFORE", "the link text to replace", :attribute_name => :before
  parameter "AFTER", "link text to replace with", :attribute_name => :after

  def execute
    # Read list of files to replace the links in from STDIN
    ARGF.each do |file|
      file_slug = File.basename(file, ".*")

      # Check that the file exists and is either a numerus currens or datetime
      if File.exists?(file) &&
         (file_slug =~ /^[0-9]{3}/ || file_slug =~ /^[0-9]{8}T[0-9]{4}/)
        puts "zreplacelinks: Replacing links in #{file}..."
        File.write(file, File.read(file).gsub(/([[|:])#{before}]]/, "\\1#{after}]]"))
      else
        puts "zreplacelinks: File '#{file}' doesn't appear valid; skipping"
      end
    end
  end
end
