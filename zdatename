#!/usr/bin/bash
# Outputs the date name (YYYYMMDDThhmm) for the given file. Since the zettel
# files only record the creation date, the default is to use 0000 for time
# unless --modified/-m is given, in which case the last modification time is
# used instead. Alternatively, with --time/-t, one can manually specify a time
# to use.

function usage() {
    echo "Usage: zdatename [--modified|-m] [-time|-t <HHMM>] <zettel-file>"
}

# Process command line options
modified=
time=
fname=

while [ "$1" != "" ]; do
    case $1 in
        -m | --modified )
            modified=1
            ;;
        -t | --time )
            shift
            time=$1
            if [[ ! "$time" =~ ^[0-9]{4}$ ]]; then
                echo "Error: Time must be in the form of HHMM"
                exit 1
            fi
            ;;
        -h | --help )
            usage
            exit
            ;;
        * )
            fname="$1"
    esac
    shift
done

if [[ -z "$fname" ]]; then
    echo "Error: No filename given"
    exit 1
fi

bname=$(basename $fname)
ext=${bname#*.}

created=`grep '^created:' $fname`
if [[ $created =~ created:.+([0-9]{4})-([0-9]{2})-([0-9]{2}) ]]; then
    year=${BASH_REMATCH[1]}
    month=${BASH_REMATCH[2]}
    day=${BASH_REMATCH[3]}

    if [[ "$time" ]]; then
        echo "${year}${month}${day}T${time}.$ext"
    elif [[ $modified -eq 1 ]]; then
        modtime=$(date -d @$(stat -c'%Y' "$fname") "+%H%M")
        if [[ $modtime != "" ]]; then
            echo "${year}${month}${day}T${modtime}.$ext"
        else
            echo "Error: No modification time."
            exit 1
        fi
    else
        echo "${year}${month}${day}T0000.$ext"
    fi
else
    echo "No created date"
    exit 1
fi

