#!/usr/bin/env ruby

require 'clamp'
require_relative 'zettel'

Clamp do
  def execute
    # Need to get rid of ARGV arguments before ARGF.each_line starts reading
    # from STDIN
    until ARGV.empty? do
      ARGV.shift
    end

    # Get the list of new slugs
    new_slugs_file = "/Users/richard/Dropbox/Zettel/auto/new-slugs"
    new_slugs = File.readlines(new_slugs_file).each {|line| line.chomp!}
    used_slugs = Array.new

    # Read list of files to replace the links in from STDIN
    ARGF.each_line do |line|
      line = line.strip

      if !line.empty?
        old = Zettel.new_from_link(line)

        used_slugs.push("#{old.slug} => #{new_slugs.last}")
        new = Zettel.new_from_link(new_slugs.pop)

        while new.exists?
          puts "Warning: Zettel #{new.slug} exists; skipping"
          new = Zettel.new_from_link(new_slugs.pop)
        end

        # Check that the file exists and is either a numerus currens or datetime
        if old
          system("zmove", old.slug, new.slug)
        else
          STDERR.puts "Error: File '#{line}' doesn't appear valid; skipping"
        end
      end
    end

    puts "Writing remaining unused slugs back..."
    File.open(new_slugs_file, "w") do |f|
      f.puts(new_slugs)
    end

    puts "Saving used slugs..."
    used_slugs_file = "/Users/richard/Dropbox/Zettel/auto/used-new-slugs"
    File.open(used_slugs_file, "a") do |f|
      f.puts(used_slugs)
    end
  end
end
